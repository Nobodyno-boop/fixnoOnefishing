plugins {
    id 'java'
    id 'java-library'
}

group = 'fr.nobody.fix'
version = '1.2'

repositories {
    flatDir {
        dirs 'libs'
    }
    mavenCentral()
    maven {
        name = 'papermc-repo'
        url = 'https://papermc.io/repo/repository/maven-public/'
    }
    maven {
        name = 'sonatype'
        url = 'https://oss.sonatype.org/content/groups/public/'
    }
    maven { url 'https://jitpack.io' }

}

// put the jar in plugins folder for test fast or default folder is build.
libsDirName = System.getenv().getOrDefault("dir", "./build")


dependencies {
    compileOnly 'com.destroystokyo.paper:paper-api:1.16.5-R0.1-SNAPSHOT'
    compileOnly "com.github.MilkBowl:VaultAPI:1.7"
    implementation('org.jooq:joor:0.9.14')
    // to evaluate settings.priceformula in config NoOneFishing
    implementation('net.objecthunter:exp4j:0.4.8')
    implementation(files('libs\\javassist.jar'))


}


def targetJavaVersion = 8
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}


jar {
    manifest {
        attributes "Premain-Class" : "fr.nobody.fix.fishsell.fix.Fix"
    }
    // Will include every single one of your dependencies, project or not
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }


}
